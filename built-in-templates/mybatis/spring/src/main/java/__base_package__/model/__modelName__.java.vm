package ${currentClass.packageName};

import com.baomidou.mybatisplus.annotation.*;
import com.baomidou.mybatisplus.extension.activerecord.Model;
import org.springframework.format.annotation.DateTimeFormat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.NotNull;
#if($currentModel.primaryKeyFields.size() > 1)## A
import java.io.Serializable;
#end## A
#foreach ($importType in $currentClass.dynamicImports)## A
import ${importType};
#end## A

@ApiModel(description = "${currentModel.description}")
#if($currentModel.exist)## A
@TableName("${currentModel.tableName}")
#end## A
public class ${currentClass.simpleName} extends Model<${currentClass.simpleName}> {

#foreach ($field in ${currentClass.fields})## A
    @ApiModelProperty(value = "$field.label")
#if($field.primaryKey && $currentModel.primaryKeyFields.size() == 1)## A-1
#if($field.autoIncrement)## A-1-1
    @TableId(type = IdType.AUTO)
#else## A-1-1
    @TableId(type = IdType.ASSIGN_ID)
#end## A-1-1
#end## A-1
#if($field.nullable == false)## A-2
    @NotNull(message = "$field.label not null")
#end## A-2
#if($currentModel.exist && !$field.exist)## A-3
    @TableField(exist = false)
#end## A-3
#if(${field.jdbcType} == 'DATE' || ${field.jdbcType} == 'TIMESTAMP' || ${field.jdbcType} == 'TIME')## A-4
#if($field.format == "DATE")## A-4-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.DATE)
#elseif($field.format == "TIME")## A-4-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.TIME)
#else## A-4-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
#end## A-4-1
#end## A-4
    private #getJavaTypeSimpleName($field.javaType) $field.property;

#end## A

#foreach ($field in ${currentClass.fields})## A
    public #getJavaTypeSimpleName($field.javaType) #getFieldGetterName($field)() {
        return this.$field.property;
    }

    public void #getFieldSetterName($field)(#getJavaTypeSimpleName($field.javaType) $field.property) {
        this.$field.property = $field.property;
    }

#end## A
}
