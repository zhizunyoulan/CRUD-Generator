package ${currentClass.packageName};

#if($currentModel.primaryKeyFields.size() > 1)## A
import java.io.Serializable;
import java.util.Objects;
#end## A
#foreach ($importType in $currentClass.dynamicImports)## A
import ${importType};
#end## A

public class ${currentClass.simpleName} implements Serializable {

#foreach($primaryKeyField in $currentModel.primaryKeyFields)
    private #getJavaTypeSimpleName(${primaryKeyField.javaType}) ${primaryKeyField.property};

#end

    public ${currentClass.simpleName}() {}

    public UserId(#foreach($primaryKeyField in $currentModel.primaryKeyFields)#getJavaTypeSimpleName(${primaryKeyField.javaType}) ${primaryKeyField.property}#if( !$foreach.last ), #end#end) {
#foreach($primaryKeyField in $currentModel.primaryKeyFields)
        this.${primaryKeyField.property} = ${primaryKeyField.property};
#end
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        ${currentClass.simpleName} #toLowerCamelCase(${currentClass.simpleName}) = (${currentClass.simpleName}) o;
#foreach($primaryKeyField in $currentModel.primaryKeyFields)
#if( $foreach.first )
        return Objects.equals(${primaryKeyField.property}, #toLowerCamelCase(${currentClass.simpleName}).${primaryKeyField.property}) &&
#else
               Objects.equals(${primaryKeyField.property}, #toLowerCamelCase(${currentClass.simpleName}).${primaryKeyField.property});
#end
#end

    }

    @Override
    public int hashCode() {
        return Objects.hash(#foreach($primaryKeyField in $currentModel.primaryKeyFields)${primaryKeyField.property}#if( !$foreach.last ), #end#end);
    }
}
