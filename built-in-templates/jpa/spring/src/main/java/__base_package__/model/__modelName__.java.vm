package ${currentClass.packageName};

import org.springframework.format.annotation.DateTimeFormat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.NotNull;
#if($currentModel.primaryKeyFields.size() > 1)## A
import java.io.Serializable;
import javax.persistence.Transient;
import javax.persistence.IdClass;
import ${currentIdClass.qualifiedName};
#end## A
#foreach ($importType in $currentClass.dynamicImports)## A
import ${importType};
#end## A

@ApiModel(description = "${currentModel.description}")
@Entity(name = "${currentModel.tableName}")
#if($currentModel.primaryKeyFields.size() > 1)
@IdClass(${currentIdClass.simpleName}.class)
#end
@org.hibernate.annotations.Table(appliesTo = "${currentModel.tableName}", comment = "${currentModel.description}")
public class ${currentClass.simpleName} #if($requestModelClass.superClass != $null)extends ${requestModelClass.superClass.simpleName} #end#if($currentModel.primaryKeyFields.size() > 1)implements Serializable#end{

#foreach ($field in ${currentClass.fields})## A
#if($requestModelClass.superClass == $null || !${requestModelClass.superClass.containsProperty($field.property)})
    @ApiModelProperty(value = "$field.label")
#if($field.nullable == false)## A-2
    @NotNull(message = "$field.label not null")
#end## A-2
#if(${field.jdbcType} == 'DATE' || ${field.jdbcType} == 'TIMESTAMP' || ${field.jdbcType} == 'TIME')## A-4
#if($field.format == "DATE")## A-4-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.DATE)
#elseif($field.format == "TIME")## A-4-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.TIME)
#else## A-4-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
#end## A-4-1
#end## A-4
    private #getJavaTypeSimpleName($field.javaType) $field.property;

#end
#end## A

#foreach ($field in ${currentClass.fields})## A
#if($field.exist)## A-1
#if($field.primaryKey)## A-1-1
    @Id
#if($currentModel.primaryKeyFields.size() == 1)## A-1-1-1
#set($primaryKeyField = ${currentModel.primaryKeyField})
#if($primaryKeyField != $null && ($primaryKeyField.javaType == "java.lang.Long" || $primaryKeyField.javaType == "java.lang.Integer"))## A-1-1-1-1
    @GeneratedValue(strategy = GenerationType.IDENTITY)
#elseif($primaryKeyField != $null)## A-1-1-1-1
    @GeneratedValue(strategy = GenerationType.AUTO)
#end## A-1-1-1-1
#end## A-1-1-1
#else## A-1-1
#set($_column_annotion_attributes = [])
#if(!$field.nullable)## A-1-1-1
#if($_column_annotion_attributes.add("nullable = false"))#end
#end## A-1-1-1
#if($field.unique)## A-1-1-2
#if($_column_annotion_attributes.add("unique = true"))#end
#end## A-1-1-2
#if($_column_annotion_attributes.size() > 0)## A-1-1-3
    @Column(#foreach ($_column_annotion_attribute in $_column_annotion_attributes)$_column_annotion_attribute#if(!$foreach.last), #end#end)
#else## A-1-1-3
    @Column
#end## A-1-1-3
#end## A-1-1
#else## A-1
    @Transient
#end## A-1
    public #getJavaTypeSimpleName($field.javaType) #getFieldGetterName($field)() {
        return this.$field.property;
    }

    public void #getFieldSetterName($field)(#getJavaTypeSimpleName($field.javaType) $field.property) {
        this.$field.property = $field.property;
    }

#end## A
}
