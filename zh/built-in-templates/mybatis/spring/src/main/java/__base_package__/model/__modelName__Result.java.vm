package ${resultModelClass.packageName};

import com.baomidou.mybatisplus.annotation.*;
import org.springframework.format.annotation.DateTimeFormat;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.NotNull;
#if($resultModelClass.superClass != $null)## A
import ${resultModelClass.superClass.qualifiedName};
#end## A
#foreach ($importType in $resultModelClass.dynamicImports)## A
import ${importType};
#end## A

@ApiModel(description = "${mainModel.description} ResultModel")
public class ${resultModelClass.simpleName} #if($resultModelClass.superClass != $null)extends ${resultModelClass.superClass.simpleName} #end{

#foreach ($field in $resultModelClass.fields)## A
#if($resultModelClass.superClass == $null || !${resultModelClass.superClass.containsProperty($field.property)})## A-1
    @ApiModelProperty(value = "$field.label")
#if(${field.jdbcType} == 'DATE' || ${field.jdbcType} == 'TIMESTAMP' || ${field.jdbcType} == 'TIME')## A-1-1
#if($field.format == "DATE")## A-1-1-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.DATE)
#elseif($field.format == "TIME")## A-1-1-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.TIME)
#else## A-1-1-1
    @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
#end## A-1-1-1
#end## A-1-1
    private #getJavaTypeSimpleName($field.javaType) $field.property;

#end## A-1
#end## A

#foreach ($field in $resultModelClass.fields)## A
#if($resultModelClass.superClass == $null || !${resultModelClass.superClass.containsProperty($field.property)})## A-1
    public #getJavaTypeSimpleName($field.javaType) #getFieldGetterName($field)() {
        return this.$field.property;
    }

    public void #getFieldSetterName($field)(#getJavaTypeSimpleName($field.javaType) $field.property) {
        this.$field.property = $field.property;
    }

#end## A-1
#end## A
}
